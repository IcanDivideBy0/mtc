{"version":3,"sources":["components/TextField.js","components/ProgressButton.js","pages/ContactPage.js"],"names":["TextInput","_ref","input","meta","props","Object","objectWithoutProperties","error","touched","submitError","helperText","react_default","a","createElement","index_es","assign","EMAIL_REGEX","TextField","_ref2","type","react_final_form_es","component","validate","value","required","test","parse","defaultProps","withStyles","theme","icon","marginRight","spacing","unit","classes","progress","Icon","disabled","children","size","color","className","ContactPage","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","values","wrap","_context","prev","next","stop","this","_x","apply","arguments","_ref3","handleSubmit","submitting","submitSucceeded","noValidate","action","concat","EMAIL","method","container","justify","item","xs","variant","name","label","fullWidth","multiline","Message","components_ProgressButton","SendIcon"],"mappings":"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","file":"static/js/pages-ContactPage.f14eb234.chunk.js","sourcesContent":["import React from \"react\";\nimport { Field } from \"react-final-form\";\n\nimport { TextField as MuiTextField } from \"@material-ui/core\";\n\nfunction TextInput({ input, meta, ...props }) {\n  const error = meta.touched && (meta.error || meta.submitError);\n\n  const helperText =\n    meta.touched && (meta.error || meta.submitError)\n      ? meta.error || meta.submitError\n      : props.helperText;\n\n  return (\n    <MuiTextField\n      {...input}\n      {...props}\n      helperText={helperText}\n      error={!!error}\n    />\n  );\n}\n\nconst EMAIL_REGEX = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nexport default function TextField({ type, ...props }) {\n  return (\n    <Field\n      type={type}\n      component={TextInput}\n      validate={(value, ...args) => {\n        if (props.required && value == null) {\n          return \"Ce champ est obligatoire\";\n        }\n\n        if (type === \"email\" && !EMAIL_REGEX.test(value))\n          return \"L’adresse email est invalide\";\n      }}\n      parse={null}\n      {...props}\n    />\n  );\n}\n\nTextField.defaultProps = { type: \"text\" };\n","import React from \"react\";\nimport { withStyles, Button, CircularProgress } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nfunction ProgressButton({\n  classes,\n  progress,\n  Icon,\n  disabled,\n  children,\n  ...props\n}) {\n  return (\n    <Button {...props} disabled={disabled || progress}>\n      {progress ? (\n        <CircularProgress size=\"1em\" color=\"inherit\" className={classes.icon} />\n      ) : (\n        Icon && <Icon className={classes.icon} />\n      )}\n\n      {children}\n    </Button>\n  );\n}\n\nexport default withStyles(styles)(ProgressButton);\n","import React from \"react\";\nimport { FORM_ERROR } from \"final-form\";\nimport { Form } from \"react-final-form\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { Send as SendIcon } from \"@material-ui/icons\";\n\nimport { EMAIL } from \"mtc/constants\";\nimport TextField from \"mtc/components/TextField\";\nimport Message from \"mtc/components/Message\";\nimport ProgressButton from \"mtc/components/ProgressButton\";\n\nexport default function ContactPage({ classes }) {\n  return (\n    <Form\n      onSubmit={async values => {\n        // try {\n        //   const formData = new FormData();\n        //   formData.append(\"name\", values.name);\n        //   formData.append(\"email\", values.email);\n        //   formData.append(\"message\", values.message);\n        //   const url = `https://formspree.io/${EMAIL}`;\n        //   await fetch(url, {\n        //     method: \"POST\",\n        //     headers: {\n        //       \"Content-Type\":\n        //         \"application/x-www-form-urlencoded ; charset=UTF-8\",\n        //     },\n        //     body: formData,\n        //   });\n        // } catch (error) {\n        //   return { [FORM_ERROR]: error.toString() };\n        // }\n      }}\n    >\n      {({ handleSubmit, submitting, submitError, submitSucceeded }) => (\n        <form\n          // onSubmit={handleSubmit}\n          noValidate\n          action={`https://formspree.io/${EMAIL}`}\n          method=\"POST\"\n        >\n          <Grid container spacing={16} justify=\"flex-end\">\n            <Grid item xs={12}>\n              <Typography variant=\"h1\">Contact</Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField name=\"name\" required label=\"Nom\" fullWidth />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                name=\"email\"\n                type=\"email\"\n                required\n                label=\"Email\"\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                name=\"message\"\n                required\n                label=\"Message\"\n                multiline\n                fullWidth\n              />\n            </Grid>\n\n            {submitError && (\n              <Grid item xs={12}>\n                <Message type=\"error\">\n                  <Typography color=\"inherit\">{submitError}</Typography>\n                </Message>\n              </Grid>\n            )}\n\n            {submitSucceeded && (\n              <Grid item xs={12}>\n                <Message type=\"success\">\n                  <Typography color=\"inherit\">\n                    Votre message a bien été envoyé !\n                  </Typography>\n                </Message>\n              </Grid>\n            )}\n\n            <Grid item>\n              <ProgressButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                progress={submitting}\n                Icon={SendIcon}\n              >\n                Envoyer\n              </ProgressButton>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Form>\n  );\n}\n"],"sourceRoot":""}